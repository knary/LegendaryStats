# Build the server, test, and upload quality metrics to Sonar Cloud and CodeCov.
# Uses Java 11, the current Long Term Supported version of Java.

name: Build, test, and qulity

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is used by Sonar
        fetch-depth: 0
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Cache SonarCloud packages
      uses: actions/cache@v2.1.6
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Gradle packages
      uses: actions/cache@v2.1.6
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build
      run: ./gradlew build jacocoTestReport  --info
    - name: Sonar
      if: ${{ github.actor != 'dependabot[bot]' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./gradlew sonarqube --info
    - name: CodeCov
      uses: codecov/codecov-action@v2.0.3
      with:
        verbose: true
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    needs: build
    env:
      REGISTRY: ghcr.io
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew bootBuildImage --imageName "$REGISTRY/kontaras/legendary-stats:$GITHUB_SHA" --info
      - name: Log in to the Container registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to Repo
        run: docker push "$REGISTRY/kontaras/legendary-stats:$GITHUB_SHA"
  deploy-test:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - run: echo "TODO Deploy to dev and test"
  tag:
    runs-on: ubuntu-latest
    needs: deploy-test
    env:
      REGISTRY: ghcr.io
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to Repo
        run: |
          docker tag "$REGISTRY/kontaras/legendary-stats:$GITHUB_SHA" "$REGISTRY/kontaras/legendary-stats:latest"
          docker push "$REGISTRY/kontaras/legendary-stats:latest"
  deploy-stage:
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - run: echo "TODO Deploy to stage and test"
  
